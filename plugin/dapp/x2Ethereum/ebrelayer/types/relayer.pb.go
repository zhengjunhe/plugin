// Code generated by protoc-gen-go. DO NOT EDIT.
// source: relayer.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 以太坊账户信息
// 	 privkey : 账户地址对应的私钥
// 	 addr :账户地址
type Account4Relayer struct {
	Privkey              []byte   `protobuf:"bytes,1,opt,name=privkey,proto3" json:"privkey,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account4Relayer) Reset()         { *m = Account4Relayer{} }
func (m *Account4Relayer) String() string { return proto.CompactTextString(m) }
func (*Account4Relayer) ProtoMessage()    {}
func (*Account4Relayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_relayer_233a351ae153d331, []int{0}
}
func (m *Account4Relayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account4Relayer.Unmarshal(m, b)
}
func (m *Account4Relayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account4Relayer.Marshal(b, m, deterministic)
}
func (dst *Account4Relayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account4Relayer.Merge(dst, src)
}
func (m *Account4Relayer) XXX_Size() int {
	return xxx_messageInfo_Account4Relayer.Size(m)
}
func (m *Account4Relayer) XXX_DiscardUnknown() {
	xxx_messageInfo_Account4Relayer.DiscardUnknown(m)
}

var xxx_messageInfo_Account4Relayer proto.InternalMessageInfo

func (m *Account4Relayer) GetPrivkey() []byte {
	if m != nil {
		return m.Privkey
	}
	return nil
}

func (m *Account4Relayer) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ValidatorAddr4EthRelayer struct {
	EthValidator         string   `protobuf:"bytes,1,opt,name=ethValidator,proto3" json:"ethValidator,omitempty"`
	Chain33Validator     string   `protobuf:"bytes,2,opt,name=chain33Validator,proto3" json:"chain33Validator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorAddr4EthRelayer) Reset()         { *m = ValidatorAddr4EthRelayer{} }
func (m *ValidatorAddr4EthRelayer) String() string { return proto.CompactTextString(m) }
func (*ValidatorAddr4EthRelayer) ProtoMessage()    {}
func (*ValidatorAddr4EthRelayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_relayer_233a351ae153d331, []int{1}
}
func (m *ValidatorAddr4EthRelayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorAddr4EthRelayer.Unmarshal(m, b)
}
func (m *ValidatorAddr4EthRelayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorAddr4EthRelayer.Marshal(b, m, deterministic)
}
func (dst *ValidatorAddr4EthRelayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorAddr4EthRelayer.Merge(dst, src)
}
func (m *ValidatorAddr4EthRelayer) XXX_Size() int {
	return xxx_messageInfo_ValidatorAddr4EthRelayer.Size(m)
}
func (m *ValidatorAddr4EthRelayer) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorAddr4EthRelayer.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorAddr4EthRelayer proto.InternalMessageInfo

func (m *ValidatorAddr4EthRelayer) GetEthValidator() string {
	if m != nil {
		return m.EthValidator
	}
	return ""
}

func (m *ValidatorAddr4EthRelayer) GetChain33Validator() string {
	if m != nil {
		return m.Chain33Validator
	}
	return ""
}

type Txhashes struct {
	Txhash               []string `protobuf:"bytes,1,rep,name=txhash,proto3" json:"txhash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Txhashes) Reset()         { *m = Txhashes{} }
func (m *Txhashes) String() string { return proto.CompactTextString(m) }
func (*Txhashes) ProtoMessage()    {}
func (*Txhashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_relayer_233a351ae153d331, []int{2}
}
func (m *Txhashes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Txhashes.Unmarshal(m, b)
}
func (m *Txhashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Txhashes.Marshal(b, m, deterministic)
}
func (dst *Txhashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Txhashes.Merge(dst, src)
}
func (m *Txhashes) XXX_Size() int {
	return xxx_messageInfo_Txhashes.Size(m)
}
func (m *Txhashes) XXX_DiscardUnknown() {
	xxx_messageInfo_Txhashes.DiscardUnknown(m)
}

var xxx_messageInfo_Txhashes proto.InternalMessageInfo

func (m *Txhashes) GetTxhash() []string {
	if m != nil {
		return m.Txhash
	}
	return nil
}

type ReqWalletSetPasswd struct {
	OldPassphase         string   `protobuf:"bytes,1,opt,name=oldPassphase,proto3" json:"oldPassphase,omitempty"`
	NewPassphase         string   `protobuf:"bytes,2,opt,name=newPassphase,proto3" json:"newPassphase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqWalletSetPasswd) Reset()         { *m = ReqWalletSetPasswd{} }
func (m *ReqWalletSetPasswd) String() string { return proto.CompactTextString(m) }
func (*ReqWalletSetPasswd) ProtoMessage()    {}
func (*ReqWalletSetPasswd) Descriptor() ([]byte, []int) {
	return fileDescriptor_relayer_233a351ae153d331, []int{3}
}
func (m *ReqWalletSetPasswd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqWalletSetPasswd.Unmarshal(m, b)
}
func (m *ReqWalletSetPasswd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqWalletSetPasswd.Marshal(b, m, deterministic)
}
func (dst *ReqWalletSetPasswd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqWalletSetPasswd.Merge(dst, src)
}
func (m *ReqWalletSetPasswd) XXX_Size() int {
	return xxx_messageInfo_ReqWalletSetPasswd.Size(m)
}
func (m *ReqWalletSetPasswd) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqWalletSetPasswd.DiscardUnknown(m)
}

var xxx_messageInfo_ReqWalletSetPasswd proto.InternalMessageInfo

func (m *ReqWalletSetPasswd) GetOldPassphase() string {
	if m != nil {
		return m.OldPassphase
	}
	return ""
}

func (m *ReqWalletSetPasswd) GetNewPassphase() string {
	if m != nil {
		return m.NewPassphase
	}
	return ""
}

type Account4Show struct {
	Privkey              string   `protobuf:"bytes,1,opt,name=privkey,proto3" json:"privkey,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account4Show) Reset()         { *m = Account4Show{} }
func (m *Account4Show) String() string { return proto.CompactTextString(m) }
func (*Account4Show) ProtoMessage()    {}
func (*Account4Show) Descriptor() ([]byte, []int) {
	return fileDescriptor_relayer_233a351ae153d331, []int{4}
}
func (m *Account4Show) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account4Show.Unmarshal(m, b)
}
func (m *Account4Show) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account4Show.Marshal(b, m, deterministic)
}
func (dst *Account4Show) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account4Show.Merge(dst, src)
}
func (m *Account4Show) XXX_Size() int {
	return xxx_messageInfo_Account4Show.Size(m)
}
func (m *Account4Show) XXX_DiscardUnknown() {
	xxx_messageInfo_Account4Show.DiscardUnknown(m)
}

var xxx_messageInfo_Account4Show proto.InternalMessageInfo

func (m *Account4Show) GetPrivkey() string {
	if m != nil {
		return m.Privkey
	}
	return ""
}

func (m *Account4Show) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type AssetType struct {
	Chain                string   `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	IssueContract        string   `protobuf:"bytes,2,opt,name=issueContract,proto3" json:"issueContract,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetType) Reset()         { *m = AssetType{} }
func (m *AssetType) String() string { return proto.CompactTextString(m) }
func (*AssetType) ProtoMessage()    {}
func (*AssetType) Descriptor() ([]byte, []int) {
	return fileDescriptor_relayer_233a351ae153d331, []int{5}
}
func (m *AssetType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetType.Unmarshal(m, b)
}
func (m *AssetType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetType.Marshal(b, m, deterministic)
}
func (dst *AssetType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetType.Merge(dst, src)
}
func (m *AssetType) XXX_Size() int {
	return xxx_messageInfo_AssetType.Size(m)
}
func (m *AssetType) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetType.DiscardUnknown(m)
}

var xxx_messageInfo_AssetType proto.InternalMessageInfo

func (m *AssetType) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *AssetType) GetIssueContract() string {
	if m != nil {
		return m.IssueContract
	}
	return ""
}

func (m *AssetType) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

type EthBridgeClaim struct {
	EthereumChainID       int32    `protobuf:"varint,1,opt,name=ethereumChainID,proto3" json:"ethereumChainID,omitempty"`
	BridgeContractAddress []byte   `protobuf:"bytes,2,opt,name=bridgeContractAddress,proto3" json:"bridgeContractAddress,omitempty"`
	Nonce                 int64    `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	TokenContractAddress  []byte   `protobuf:"bytes,4,opt,name=tokenContractAddress,proto3" json:"tokenContractAddress,omitempty"`
	Symbol                string   `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	EthereumSender        []byte   `protobuf:"bytes,6,opt,name=ethereumSender,proto3" json:"ethereumSender,omitempty"`
	Chain33Receiver       []byte   `protobuf:"bytes,7,opt,name=chain33Receiver,proto3" json:"chain33Receiver,omitempty"`
	ValidatorAddress      []byte   `protobuf:"bytes,8,opt,name=ValidatorAddress,proto3" json:"ValidatorAddress,omitempty"`
	Amount                int64    `protobuf:"varint,9,opt,name=amount,proto3" json:"amount,omitempty"`
	ClaimType             int32    `protobuf:"varint,10,opt,name=claimType,proto3" json:"claimType,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *EthBridgeClaim) Reset()         { *m = EthBridgeClaim{} }
func (m *EthBridgeClaim) String() string { return proto.CompactTextString(m) }
func (*EthBridgeClaim) ProtoMessage()    {}
func (*EthBridgeClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_relayer_233a351ae153d331, []int{6}
}
func (m *EthBridgeClaim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthBridgeClaim.Unmarshal(m, b)
}
func (m *EthBridgeClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthBridgeClaim.Marshal(b, m, deterministic)
}
func (dst *EthBridgeClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthBridgeClaim.Merge(dst, src)
}
func (m *EthBridgeClaim) XXX_Size() int {
	return xxx_messageInfo_EthBridgeClaim.Size(m)
}
func (m *EthBridgeClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_EthBridgeClaim.DiscardUnknown(m)
}

var xxx_messageInfo_EthBridgeClaim proto.InternalMessageInfo

func (m *EthBridgeClaim) GetEthereumChainID() int32 {
	if m != nil {
		return m.EthereumChainID
	}
	return 0
}

func (m *EthBridgeClaim) GetBridgeContractAddress() []byte {
	if m != nil {
		return m.BridgeContractAddress
	}
	return nil
}

func (m *EthBridgeClaim) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *EthBridgeClaim) GetTokenContractAddress() []byte {
	if m != nil {
		return m.TokenContractAddress
	}
	return nil
}

func (m *EthBridgeClaim) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *EthBridgeClaim) GetEthereumSender() []byte {
	if m != nil {
		return m.EthereumSender
	}
	return nil
}

func (m *EthBridgeClaim) GetChain33Receiver() []byte {
	if m != nil {
		return m.Chain33Receiver
	}
	return nil
}

func (m *EthBridgeClaim) GetValidatorAddress() []byte {
	if m != nil {
		return m.ValidatorAddress
	}
	return nil
}

func (m *EthBridgeClaim) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *EthBridgeClaim) GetClaimType() int32 {
	if m != nil {
		return m.ClaimType
	}
	return 0
}

func init() {
	proto.RegisterType((*Account4Relayer)(nil), "types.Account4Relayer")
	proto.RegisterType((*ValidatorAddr4EthRelayer)(nil), "types.ValidatorAddr4EthRelayer")
	proto.RegisterType((*Txhashes)(nil), "types.Txhashes")
	proto.RegisterType((*ReqWalletSetPasswd)(nil), "types.ReqWalletSetPasswd")
	proto.RegisterType((*Account4Show)(nil), "types.Account4Show")
	proto.RegisterType((*AssetType)(nil), "types.assetType")
	proto.RegisterType((*EthBridgeClaim)(nil), "types.EthBridgeClaim")
}

func init() { proto.RegisterFile("relayer.proto", fileDescriptor_relayer_233a351ae153d331) }

var fileDescriptor_relayer_233a351ae153d331 = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x56, 0xe9, 0xda, 0x2d, 0x4f, 0xd9, 0x86, 0xac, 0x81, 0x7c, 0xe0, 0x50, 0x59, 0x08, 0x45,
	0x1c, 0x38, 0xd0, 0x1e, 0x91, 0xd0, 0x28, 0x3b, 0x70, 0x43, 0xee, 0x04, 0x17, 0x24, 0xe4, 0xc6,
	0x4f, 0x38, 0x2c, 0xb1, 0x83, 0xed, 0xae, 0xe4, 0x0f, 0xf0, 0xbb, 0x91, 0x9d, 0x84, 0x36, 0xd9,
	0xc4, 0x2d, 0xdf, 0xf7, 0x9e, 0x3f, 0x7f, 0xdf, 0xf3, 0x0b, 0x9c, 0x5b, 0x2c, 0x45, 0x83, 0xf6,
	0x4d, 0x6d, 0x8d, 0x37, 0x64, 0xe6, 0x9b, 0x1a, 0x1d, 0x7b, 0x0f, 0x97, 0xd7, 0x79, 0x6e, 0x76,
	0xda, 0xaf, 0x78, 0x5b, 0x27, 0x14, 0x4e, 0x6b, 0x5b, 0xdc, 0xdf, 0x61, 0x43, 0x27, 0x8b, 0x49,
	0x96, 0xf2, 0x1e, 0x12, 0x02, 0x27, 0x42, 0x4a, 0x4b, 0x9f, 0x2c, 0x26, 0x59, 0xc2, 0xe3, 0x37,
	0xfb, 0x09, 0xf4, 0x8b, 0x28, 0x0b, 0x29, 0xbc, 0xb1, 0xd7, 0x52, 0xda, 0xd5, 0x8d, 0x57, 0xbd,
	0x12, 0x83, 0x14, 0xbd, 0xfa, 0x57, 0x8e, 0x72, 0x09, 0x1f, 0x70, 0xe4, 0x35, 0x3c, 0xcd, 0x95,
	0x28, 0xf4, 0x72, 0x79, 0xe8, 0x6b, 0xf5, 0x1f, 0xf0, 0x8c, 0xc1, 0xd9, 0xed, 0x6f, 0x25, 0x9c,
	0x42, 0x47, 0x9e, 0xc3, 0xdc, 0xc7, 0x6f, 0x3a, 0x59, 0x4c, 0xb3, 0x84, 0x77, 0x88, 0x7d, 0x03,
	0xc2, 0xf1, 0xd7, 0x57, 0x51, 0x96, 0xe8, 0x37, 0xe8, 0x3f, 0x0b, 0xe7, 0xf6, 0x32, 0x38, 0x31,
	0xa5, 0x0c, 0xa0, 0x56, 0xc2, 0x61, 0xef, 0xe4, 0x98, 0x0b, 0x3d, 0x1a, 0xf7, 0x87, 0x9e, 0xd6,
	0xc5, 0x80, 0x63, 0xef, 0x20, 0xed, 0xc7, 0xb5, 0x51, 0x66, 0x3f, 0x9e, 0x55, 0xf2, 0xff, 0x59,
	0x7d, 0x87, 0x44, 0x38, 0x87, 0xfe, 0xb6, 0xa9, 0x91, 0x5c, 0xc1, 0x2c, 0x06, 0xec, 0x0e, 0xb6,
	0x80, 0xbc, 0x84, 0xf3, 0xc2, 0xb9, 0x1d, 0xae, 0x8d, 0xf6, 0x56, 0xe4, 0xbe, 0x3b, 0x3f, 0x24,
	0x43, 0x78, 0xd7, 0x54, 0x5b, 0x53, 0xd2, 0x69, 0x2c, 0x77, 0x88, 0xfd, 0x99, 0xc2, 0xc5, 0x8d,
	0x57, 0x1f, 0x6c, 0x21, 0x7f, 0xe0, 0xba, 0x14, 0x45, 0x45, 0x32, 0xb8, 0x44, 0xaf, 0xd0, 0xe2,
	0xae, 0x5a, 0x87, 0x1b, 0x3e, 0x7d, 0x8c, 0x17, 0xce, 0xf8, 0x98, 0x26, 0x2b, 0x78, 0xb6, 0x6d,
	0x0f, 0x76, 0xd7, 0x84, 0xe7, 0x44, 0xe7, 0xa2, 0x85, 0x94, 0x3f, 0x5e, 0x0c, 0x31, 0xb4, 0xd1,
	0x39, 0x46, 0x27, 0x53, 0xde, 0x02, 0xf2, 0x16, 0xae, 0xbc, 0xb9, 0x43, 0x3d, 0x96, 0x3a, 0x89,
	0x52, 0x8f, 0xd6, 0x8e, 0x42, 0xcd, 0x8e, 0x43, 0x91, 0x57, 0x70, 0xd1, 0x5b, 0xdd, 0xa0, 0x96,
	0x68, 0xe9, 0x3c, 0xaa, 0x8c, 0xd8, 0x90, 0xb4, 0xdb, 0x18, 0x8e, 0x39, 0x16, 0xf7, 0x68, 0xe9,
	0x69, 0x6c, 0x1c, 0xd3, 0x61, 0xe7, 0x06, 0x3b, 0x1b, 0x9c, 0x9d, 0xc5, 0xd6, 0x07, 0x7c, 0x70,
	0x25, 0xaa, 0xf0, 0xe0, 0x34, 0x89, 0x01, 0x3b, 0x44, 0x5e, 0x40, 0x92, 0x87, 0x01, 0x87, 0xb7,
	0xa4, 0x10, 0x27, 0x7a, 0x20, 0xb6, 0xf3, 0xf8, 0x93, 0x2d, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x0d, 0x5f, 0xfd, 0x15, 0x75, 0x03, 0x00, 0x00,
}
