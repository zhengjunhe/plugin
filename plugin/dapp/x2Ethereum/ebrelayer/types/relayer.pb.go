// Code generated by protoc-gen-go.
// source: relayer.proto
// DO NOT EDIT!

package types

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

// 以太坊账户信息
// 	 privkey : 账户地址对应的私钥
// 	 addr :账户地址
type Account4Relayer struct {
	Privkey []byte `protobuf:"bytes,1,opt,name=privkey,proto3" json:"privkey,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
}

func (m *Account4Relayer) Reset()         { *m = Account4Relayer{} }
func (m *Account4Relayer) String() string { return proto.CompactTextString(m) }
func (*Account4Relayer) ProtoMessage()    {}

type ValidatorAddr4EthRelayer struct {
	EthValidator     string `protobuf:"bytes,1,opt,name=ethValidator" json:"ethValidator,omitempty"`
	Chain33Validator string `protobuf:"bytes,2,opt,name=chain33Validator" json:"chain33Validator,omitempty"`
}

func (m *ValidatorAddr4EthRelayer) Reset()         { *m = ValidatorAddr4EthRelayer{} }
func (m *ValidatorAddr4EthRelayer) String() string { return proto.CompactTextString(m) }
func (*ValidatorAddr4EthRelayer) ProtoMessage()    {}

type Txhashes struct {
	Txhash []string `protobuf:"bytes,1,rep,name=txhash" json:"txhash,omitempty"`
}

func (m *Txhashes) Reset()         { *m = Txhashes{} }
func (m *Txhashes) String() string { return proto.CompactTextString(m) }
func (*Txhashes) ProtoMessage()    {}

type ReqSetPasswd struct {
	OldPassphase string `protobuf:"bytes,1,opt,name=oldPassphase" json:"oldPassphase,omitempty"`
	NewPassphase string `protobuf:"bytes,2,opt,name=newPassphase" json:"newPassphase,omitempty"`
}

func (m *ReqSetPasswd) Reset()         { *m = ReqSetPasswd{} }
func (m *ReqSetPasswd) String() string { return proto.CompactTextString(m) }
func (*ReqSetPasswd) ProtoMessage()    {}

type Account4Show struct {
	Privkey string `protobuf:"bytes,1,opt,name=privkey" json:"privkey,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
}

func (m *Account4Show) Reset()         { *m = Account4Show{} }
func (m *Account4Show) String() string { return proto.CompactTextString(m) }
func (*Account4Show) ProtoMessage()    {}

type AssetType struct {
	Chain         string `protobuf:"bytes,1,opt,name=chain" json:"chain,omitempty"`
	IssueContract string `protobuf:"bytes,2,opt,name=issueContract" json:"issueContract,omitempty"`
	Symbol        string `protobuf:"bytes,3,opt,name=symbol" json:"symbol,omitempty"`
}

func (m *AssetType) Reset()         { *m = AssetType{} }
func (m *AssetType) String() string { return proto.CompactTextString(m) }
func (*AssetType) ProtoMessage()    {}

type EthBridgeClaim struct {
	EthereumChainID       int32  `protobuf:"varint,1,opt,name=ethereumChainID" json:"ethereumChainID,omitempty"`
	BridgeContractAddress []byte `protobuf:"bytes,2,opt,name=bridgeContractAddress,proto3" json:"bridgeContractAddress,omitempty"`
	Nonce                 int64  `protobuf:"varint,3,opt,name=nonce" json:"nonce,omitempty"`
	TokenContractAddress  []byte `protobuf:"bytes,4,opt,name=tokenContractAddress,proto3" json:"tokenContractAddress,omitempty"`
	Symbol                string `protobuf:"bytes,5,opt,name=symbol" json:"symbol,omitempty"`
	EthereumSender        []byte `protobuf:"bytes,6,opt,name=ethereumSender,proto3" json:"ethereumSender,omitempty"`
	Chain33Receiver       []byte `protobuf:"bytes,7,opt,name=chain33Receiver,proto3" json:"chain33Receiver,omitempty"`
	ValidatorAddress      []byte `protobuf:"bytes,8,opt,proto3" json:"ValidatorAddress,omitempty"`
	Amount                int64  `protobuf:"varint,9,opt,name=amount" json:"amount,omitempty"`
	ClaimType             int32  `protobuf:"varint,10,opt,name=claimType" json:"claimType,omitempty"`
	ChainName             string `protobuf:"bytes,11,opt,name=chainName" json:"chainName,omitempty"`
}

func (m *EthBridgeClaim) Reset()         { *m = EthBridgeClaim{} }
func (m *EthBridgeClaim) String() string { return proto.CompactTextString(m) }
func (*EthBridgeClaim) ProtoMessage()    {}

type ImportKeyReq struct {
	PrivateKey string `protobuf:"bytes,1,opt,name=privateKey" json:"privateKey,omitempty"`
}

func (m *ImportKeyReq) Reset()         { *m = ImportKeyReq{} }
func (m *ImportKeyReq) String() string { return proto.CompactTextString(m) }
func (*ImportKeyReq) ProtoMessage()    {}

type RelayerRunStatus struct {
	Status  int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Details string `protobuf:"bytes,2,opt,name=details" json:"details,omitempty"`
}

func (m *RelayerRunStatus) Reset()         { *m = RelayerRunStatus{} }
func (m *RelayerRunStatus) String() string { return proto.CompactTextString(m) }
func (*RelayerRunStatus) ProtoMessage()    {}

type NewProphecyClaim struct {
	ClaimType     uint32 `protobuf:"varint,1,opt,name=claimType" json:"claimType,omitempty"`
	Chain33Sender string `protobuf:"bytes,2,opt,name=chain33Sender" json:"chain33Sender,omitempty"`
	TokenAddr     string `protobuf:"bytes,3,opt,name=tokenAddr" json:"tokenAddr,omitempty"`
	Symbol        string `protobuf:"bytes,4,opt,name=symbol" json:"symbol,omitempty"`
	EthReceiver   string `protobuf:"bytes,5,opt,name=ethReceiver" json:"ethReceiver,omitempty"`
	Amount        int64  `protobuf:"varint,6,opt,name=amount" json:"amount,omitempty"`
}

func (m *NewProphecyClaim) Reset()         { *m = NewProphecyClaim{} }
func (m *NewProphecyClaim) String() string { return proto.CompactTextString(m) }
func (*NewProphecyClaim) ProtoMessage()    {}

type BalanceAddr struct {
	Owner     string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	TokenAddr string `protobuf:"bytes,2,opt,name=tokenAddr" json:"tokenAddr,omitempty"`
}

func (m *BalanceAddr) Reset()         { *m = BalanceAddr{} }
func (m *BalanceAddr) String() string { return proto.CompactTextString(m) }
func (*BalanceAddr) ProtoMessage()    {}

type MintToken struct {
	Owner     string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	TokenAddr string `protobuf:"bytes,2,opt,name=tokenAddr" json:"tokenAddr,omitempty"`
	Amount    int64  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
}

func (m *MintToken) Reset()         { *m = MintToken{} }
func (m *MintToken) String() string { return proto.CompactTextString(m) }
func (*MintToken) ProtoMessage()    {}

type ApproveAllowance struct {
	OwnerKey  string `protobuf:"bytes,1,opt,name=ownerKey" json:"ownerKey,omitempty"`
	TokenAddr string `protobuf:"bytes,2,opt,name=tokenAddr" json:"tokenAddr,omitempty"`
	Amount    int64  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
}

func (m *ApproveAllowance) Reset()         { *m = ApproveAllowance{} }
func (m *ApproveAllowance) String() string { return proto.CompactTextString(m) }
func (*ApproveAllowance) ProtoMessage()    {}

type LockEthErc20 struct {
	OwnerKey  string `protobuf:"bytes,1,opt,name=ownerKey" json:"ownerKey,omitempty"`
	TokenAddr string `protobuf:"bytes,2,opt,name=tokenAddr" json:"tokenAddr,omitempty"`
	Amount    int64  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	// 将lock住的资产跨链转移到chain33的该账户名下
	Chain33Receiver string `protobuf:"bytes,4,opt,name=chain33Receiver" json:"chain33Receiver,omitempty"`
}

func (m *LockEthErc20) Reset()         { *m = LockEthErc20{} }
func (m *LockEthErc20) String() string { return proto.CompactTextString(m) }
func (*LockEthErc20) ProtoMessage()    {}

type ReplyAddr struct {
	IsOK bool   `protobuf:"varint,1,opt,name=isOK" json:"isOK,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
}

func (m *ReplyAddr) Reset()         { *m = ReplyAddr{} }
func (m *ReplyAddr) String() string { return proto.CompactTextString(m) }
func (*ReplyAddr) ProtoMessage()    {}

type ReplyBalance struct {
	IsOK    bool   `protobuf:"varint,1,opt,name=isOK" json:"isOK,omitempty"`
	Balance string `protobuf:"bytes,2,opt,name=balance" json:"balance,omitempty"`
}

func (m *ReplyBalance) Reset()         { *m = ReplyBalance{} }
func (m *ReplyBalance) String() string { return proto.CompactTextString(m) }
func (*ReplyBalance) ProtoMessage()    {}

type Burn struct {
	OwnerKey        string `protobuf:"bytes,1,opt,name=ownerKey" json:"ownerKey,omitempty"`
	TokenAddr       string `protobuf:"bytes,2,opt,name=tokenAddr" json:"tokenAddr,omitempty"`
	Amount          int64  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	Chain33Receiver string `protobuf:"bytes,4,opt,name=chain33Receiver" json:"chain33Receiver,omitempty"`
}

func (m *Burn) Reset()         { *m = Burn{} }
func (m *Burn) String() string { return proto.CompactTextString(m) }
func (*Burn) ProtoMessage()    {}

type StaticsRequest struct {
	Owner     string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	TokenAddr string `protobuf:"bytes,2,opt,name=tokenAddr" json:"tokenAddr,omitempty"`
}

func (m *StaticsRequest) Reset()         { *m = StaticsRequest{} }
func (m *StaticsRequest) String() string { return proto.CompactTextString(m) }
func (*StaticsRequest) ProtoMessage()    {}

type StaticsAll struct {
}

func (m *StaticsAll) Reset()         { *m = StaticsAll{} }
func (m *StaticsAll) String() string { return proto.CompactTextString(m) }
func (*StaticsAll) ProtoMessage()    {}

type StaticsSingle struct {
}

func (m *StaticsSingle) Reset()         { *m = StaticsSingle{} }
func (m *StaticsSingle) String() string { return proto.CompactTextString(m) }
func (*StaticsSingle) ProtoMessage()    {}

type StaticsResponse struct {
	StaticsAll    *StaticsAll    `protobuf:"bytes,1,opt,name=staticsAll" json:"staticsAll,omitempty"`
	StaticsSingle *StaticsSingle `protobuf:"bytes,2,opt,name=staticsSingle" json:"staticsSingle,omitempty"`
}

func (m *StaticsResponse) Reset()         { *m = StaticsResponse{} }
func (m *StaticsResponse) String() string { return proto.CompactTextString(m) }
func (*StaticsResponse) ProtoMessage()    {}

func (m *StaticsResponse) GetStaticsAll() *StaticsAll {
	if m != nil {
		return m.StaticsAll
	}
	return nil
}

func (m *StaticsResponse) GetStaticsSingle() *StaticsSingle {
	if m != nil {
		return m.StaticsSingle
	}
	return nil
}

type TransferToken struct {
	TokenAddr string `protobuf:"bytes,1,opt,name=tokenAddr" json:"tokenAddr,omitempty"`
	FromKey   string `protobuf:"bytes,2,opt,name=fromKey" json:"fromKey,omitempty"`
	ToAddr    string `protobuf:"bytes,3,opt,name=toAddr" json:"toAddr,omitempty"`
	Amount    int64  `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
}

func (m *TransferToken) Reset()         { *m = TransferToken{} }
func (m *TransferToken) String() string { return proto.CompactTextString(m) }
func (*TransferToken) ProtoMessage()    {}

func init() {
}
